(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{vYeh:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return p}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var l=n("7ljp"),a=n("013z");n("qKvR");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e}).apply(this,arguments)}var r={},c={_frontmatter:r},i=a.a;function p(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,l,a={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(l.b)(i,o({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",null,"Set Up the OpenShift Client CLI Tools and Access the Cluster"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"If you haven’t done so already, install the OpenShift client CLI tools using the directions at ",Object(l.b)("a",o({parentName:"li"},{href:"https://cloud.ibm.com/docs/openshift?topic=openshift-openshift-cli"}),"here"),"."),Object(l.b)("li",{parentName:"ol"},"Login to the OpenShift console.  In the upper right hand side of the page, click on your user name and select “Copy Login Command”.")),Object(l.b)("img",{src:"https://pages.github.ibm.com/CASE/cloudpak-onboard-residency/assets/img/cp4d/qijunlogin.jpg",alt:"LoginScreen"}),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Paste the command in a shell and a response will be returned with a list of projects and the current project selected.")),Object(l.b)("h2",null,"Set Up the CP4D “deploy.sh” for Add-On Installation"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Retrieve the CP4D installer and only extract its contents using the “—extract-only” switch.  For example,\n",Object(l.b)("em",{parentName:"li"},"”./installer.x86_64.520 —extract-only”")),Object(l.b)("li",{parentName:"ol"},"The “deploy.sh” script that will be used later to install an add-on will be located at “/ibm/InstallPackage/components/“.")),Object(l.b)("h2",null,"Install helm and tiller"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Download helm tool"),Object(l.b)("p",{parentName:"li"},"   $ curl -s ",Object(l.b)("a",o({parentName:"p"},{href:"https://storage.googleapis.com/kubernetes-helm/helm-v2.9.1-linux-amd64.tar.gz"}),"https://storage.googleapis.com/kubernetes-helm/helm-v2.9.1-linux-amd64.tar.gz")," | tar xz")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Copy the helm too to /bin directory"),Object(l.b)("p",{parentName:"li"},"   $ cp -f ./linux-amd64/helm /usr/local/bin/ /usr/bin/")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Check “helm” version"),Object(l.b)("p",{parentName:"li"},"   $ helm version")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Configure “helm” with OpenShift server"))),Object(l.b)("pre",null,Object(l.b)("code",o({parentName:"pre"},{}),"   $ oc whoami - find the logged in user (1)\n   $ oc whoami –t - To find password (2)\n   $ oc get routes –n default àFind the docker registry url (3)\n   $ docker login –u openshift –u &lt;password> https://&lt;url from the command 3>\n")),Object(l.b)("ol",{start:5},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"List the deployed helm charts in the server"),Object(l.b)("p",{parentName:"li"},"   $oc get pods –all-namespacs | grep tiller\n$ export TILLER_NAMESPACE=","<","namespace> —> Namespace of the tiller running in Server $ helm list"))),Object(l.b)("h2",null,"Get the Add-On to be Installed"),Object(l.b)("p",null,"For this example, the “Watson Machine Learning” add-on tar will be used.  Download the add-on code and place it somewhere like “/ibm/modules”"),Object(l.b)("h2",null,"Install the Add-On"),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"”./deploy.sh -o -d /ibm/modules/watson_machine_learning.tar”")),Object(l.b)("h2",null,"Lesson Learn"),Object(l.b)("p",null,"Running “helm list” failed after “helm version” succeeded."),Object(l.b)("pre",null,Object(l.b)("code",o({parentName:"pre"},{}),"[root@res-cdoan-29918d73-master-01 ~]# helm list\nError: Get http://localhost:8080/api/v1/namespaces/zen/configmaps?labelSelector=OWNER%!D(MISSING)TILLER: dial tcp 127.0.0.1:8080: connect: connection refused\n[root@res-cdoan-29918d73-master-01 ~]#\n")),Object(l.b)("p",null," Solution:"),Object(l.b)("p",null," Step#1:"),Object(l.b)("pre",null,Object(l.b)("code",o({parentName:"pre"},{}),"  oc --namespace=zen create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=zen:default\n  clusterrolebinding.rbac.authorization.k8s.io/add-on-cluster-admin created\n")),Object(l.b)("p",null," Step#2:"),Object(l.b)("pre",null,Object(l.b)("code",o({parentName:"pre"},{}),"  oc -n zen edit deployment  tiller-deploy\n")),Object(l.b)("p",null,"{% include figure.html src=“/assets/img/cp4d/tiller-deploy-edit.png” alt=“Edit Tiller Deploy” caption=“Edit Tiller Deploy” %}"))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-content-data-install-add-on-vmware-md-598be89308533f5af828.js.map