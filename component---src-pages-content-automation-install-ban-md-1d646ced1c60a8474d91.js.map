{"version":3,"sources":["webpack:///./src/pages/content/automation/install-ban.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-content-automation-install-ban-md-1d646ced1c60a8474d91.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/Shared/VBDData/programs/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\"></li>\n    </ul>\n    <h1>{`make sure there is a space after the - so that the TOC is generated`}</h1>\n    <p>{`{:toc}`}</p>\n    <p><strong parentName=\"p\">{`(19.0.3 UPDATE NEEDED)`}</strong></p>\n    <h3>{`Required services`}</h3>\n    <p>{`Before installing IBM Business Automation Navigator (ICN), you should have the following pre-requisites in place:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Have privileged access to your DB2 database server. `}</li>\n      <li parentName=\"ul\">{`Optionally, have access to your LDAP directory server.`}</li>\n    </ul>\n    <p>{`See the `}{`[Shared services]`}{`({{ pages.github.url }}/automation/shared-services) chapter for details on DB2 or LDAP installation, if needed.`}</p>\n    <h3>{`Log in to you OCP cluster`}</h3>\n    <p>{`See the `}{`[Prerequisites]`}{`({{ pages.github.url }}/automation/pre-requisites) chapter for details on logging in to your OCP cluster.`}</p>\n    <h3>{`Download the ICN PPA`}</h3>\n    <p>{`Download the following PPA from `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/software/passportadvantage\"\n      }}>{`IBM Passport Advantage`}</a>{` to your working-directory:`}</p>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`IBM Cloud Pak for Automation v19.0.1 - Content Navigator for Certified Kubernetes Multiplatform Multilingual (CC221ML)`}</em></li>\n    </ul>\n    <p>{`The downloaded archive should be named `}<inlineCode parentName=\"p\">{`ICP4A19.0.1-fncn.tgz`}</inlineCode>{`.`}</p>\n    <h3>{`Create the ICN project`}</h3>\n    <p>{`Create a new OpenShift project for ICN with your desired name, e.g. `}<inlineCode parentName=\"p\">{`fncnproject`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc new-project fncnproject\n`}</code></pre>\n    <p>{`Make sure you are working from  your newly created ICN project, then grant the tiller server `}<inlineCode parentName=\"p\">{`edit`}</inlineCode>{` access to current project:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc project fncnproject\noc adm policy add-role-to-user edit \"system:serviceaccount:tiller:tiller\"\n`}</code></pre>\n    <h3>{`Update the SCC`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`oc adm policy add-scc-to-user privileged -z default\n\noc edit namespace fncnproject\n`}</code></pre>\n    <p>{`While in the editor change these lines:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`openshift.io/sa.scc.supplemental-groups: 1000330000/10000`}</li>\n      <li parentName=\"ul\">{`openshift.io/sa.scc.uid-range: 1000330000/10000  `}</li>\n    </ul>\n    <p>{`To look like this:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`openshift.io/sa.scc.supplemental-groups: 50000`}</li>\n      <li parentName=\"ul\">{`openshift.io/sa.scc.uid-range: 50001`}</li>\n    </ul>\n    <p>{`You may get the following error if the SCC is not applied properly:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`forbidden: unable to validate against any security context constraint: [fsGroup: Invalid value: []int64{50000}: 50000 is not an allowed group\n`}</code></pre>\n    <h3>{`Push the FNCN images to the registry`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Get the route to the docker service as described in the `}{`[Pre-requisites]`}{`({{ pages.github.url }}/automation/pre-requisites.md) chapter, then login to your Docker registry:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`docker login -u $(oc whoami) -p $(oc whoami -t) &lt;route-to-docker-service>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Download the `}<inlineCode parentName=\"li\">{`loadimages.sh`}</inlineCode>{` script from the `}<inlineCode parentName=\"li\">{`icp4a`}</inlineCode>{` GitHub repo to your working directory:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`wget https://raw.githubusercontent.com/icp4a/cert-kubernetes/19.0.1/scripts/loadimages.sh\nchmod +x loadimages.sh\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Load the ICN images (use `}<inlineCode parentName=\"li\">{`sudo`}</inlineCode>{` for on-prem cluster):`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`./loadimages.sh -p ICP4A19.0.1-fncn.tgz -r &lt;route-to-docker-service>\n`}</code></pre>\n    <h3>{`Create the database`}</h3>\n    <p>{`Download `}<a parentName=\"p\" {...{\n        \"href\": \"%7B%7Bsite.github.url%7D%7D/assets/automation/icn/db2/createICNDB.sh\"\n      }}><inlineCode parentName=\"a\">{`createICNDB.sh`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"%7B%7Bsite.github.url%7D%7D/assets/automation/icn/db2/DB2_CREATE_SCRIPT.sql\"\n      }}><inlineCode parentName=\"a\">{`DB2_CREATE_SCRIPT.sql`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"%7B%7Bsite.github.url%7D%7D/assets/automation/icn/db2/DB2_ONE_SCRIPT_ICNDB.sql\"\n      }}><inlineCode parentName=\"a\">{`DB2_ONE_SCRIPT_ICNDB.sql`}</inlineCode></a>{` to your working directory on the database server and run the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`## copy the db2 install script\nmkdir -p /data/db2fs\nmkdir -p /data/database/config\n\n## copy createICNDB.sh, DB2_CREATE_SCRIPT.sql and DB2_ONE_SCRIPT_ICNDB.sql files into folder /data/database/config\ncp createICNDB.sh DB2_CREATE_SCRIPT.sql DB2_ONE_SCRIPT_ICNDB.sql /data/database/config\n\nchown db2inst1:db2iadm1 /data/database/config\nchown db2inst1:db2iadm1 /data/database/config/*.sh\nchown db2inst1:db2iadm1 /data/database/config/*.sql\nchmod 755 /data/database/config/*.sh\n\nsu - db2inst1\ncd /data/database/config\n./createICNDB.sh -n ICNDB -s ICNSCHEMA -t ICNTS -u db2inst1 -a ceadmin\n\n## exit su mode\nexit\n`}</code></pre>\n    <h3>{`Set up the persistent volumes`}</h3>\n    <p>{`Run the following commands to create the required PV folders in NFS, where `}<inlineCode parentName=\"p\">{`/data/persistentvolumes/`}</inlineCode>{` is the mounted directory of your NFS server:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`mkdir -p /data/persistentvolumes/icn/configDropins/overrides\nmkdir -p /data/persistentvolumes/icn/logs\nmkdir -p /data/persistentvolumes/icn/plugins\nmkdir -p /data/persistentvolumes/icn/viewerlog\nmkdir -p /data/persistentvolumes/icn/viewercache\nmkdir -p /data/persistentvolumes/icn/aspera\n\nchown 50001:50000 /data/persistentvolumes/icn/configDropins/overrides\nchown 50001:50000 /data/persistentvolumes/icn/logs\nchown 50001:50000 /data/persistentvolumes/icn/plugins\nchown 50001:50000 /data/persistentvolumes/icn/viewerlog\nchown 50001:50000 /data/persistentvolumes/icn/viewercache\nchown 50001:50000 /data/persistentvolumes/icn/aspera\n`}</code></pre>\n    <p>{`Obtain the DB2 drivers from your database server installation. Copy them to the PVs. If your database server is local the commands should look like this: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cp /opt/ibm/db2/V11.1/java/db2jcc4.jar /data/persistentvolumes/icn/configDropins/overrides/\ncp /opt/ibm/db2/V11.1/java/db2jcc_license_cu.jar /data/persistentvolumes/icn/configDropins/overrides/\n`}</code></pre>\n    <p>{`Download all the ICN overrides files to your working directory `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"%7B%7Bsite.github.url%7D%7D/assets/automation/icn/configDropins/overrides/ICNDS.xml\"\n        }}><inlineCode parentName=\"a\">{`ICNDS.xml`}</inlineCode></a>{` `}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"%7B%7Bsite.github.url%7D%7D/assets/automation/icn/configDropins/overrides/DB2JCCDriver.xml\"\n        }}><inlineCode parentName=\"a\">{`DB2JCCDriver.xml`}</inlineCode></a>{` `}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"%7B%7Bsite.github.url%7D%7D/assets/automation/icn/configDropins/overrides/ldap_TDS.xml\"\n        }}><inlineCode parentName=\"a\">{`ldap_TDS.xml`}</inlineCode></a>{`  `}</li>\n    </ul>\n    <p>{`If you changed the database name in the database creation step above, you will also need to change it in `}<inlineCode parentName=\"p\">{`ICNDS.xml`}</inlineCode>{` here  `}</p>\n    <p>{`Edit `}<inlineCode parentName=\"p\">{`ICNDS.xml`}</inlineCode>{`, replacing `}<inlineCode parentName=\"p\">{`&lt;db-server-ip>`}</inlineCode>{` with the IP address of the database server, and possibly the database name.`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`DB2JCCDriver.xml`}</inlineCode>{` contains the locations of the `}<inlineCode parentName=\"p\">{`db2jcc4.jar`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`db2jcc_license_cu.jar`}</inlineCode>{` files.`}<br parentName=\"p\"></br>{`\n`}{`Edit `}<inlineCode parentName=\"p\">{`ldap_TDS.xml`}</inlineCode>{`, replacing `}<inlineCode parentName=\"p\">{`&lt;ldap-server-ip>`}</inlineCode>{` with the IP address of the LDAP server.  `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cp DB2JCCDriver.xml /data/persistentvolumes/icn/configDropins/overrides/\ncp ICNDS.xml /data/persistentvolumes/icn/configDropins/overrides/\ncp ldap_TDS.xml /data/persistentvolumes/icn/configDropins/overrides/\n`}</code></pre>\n    <p>{`Download the `}<a parentName=\"p\" {...{\n        \"href\": \"%7B%7Bsite.github.url%7D%7D/assets/automation/icn/pv.yaml\"\n      }}><inlineCode parentName=\"a\">{`pv.yaml`}</inlineCode></a>{` configuration file to your working directory.`}</p>\n    <p>{`Replace the placeholder `}<inlineCode parentName=\"p\">{`&lt;ip-address>`}</inlineCode>{` placeholder with the IP address of NFS server and adjust the persistent volume path if needed.`}</p>\n    <p>{`Run the following command to create the PVs:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f pv.yaml\n`}</code></pre>\n    <h3>{`Create secrets`}</h3>\n    <p>{`The Helm chart requires a secret in order to pull images from docker. You might need to change the address of the docker server.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc create secret docker-registry admin.registrykey --docker-server=docker-registry.default.svc:5000 --docker-username=$(oc whoami) --docker-password=$(oc whoami -t) -n fncnproject\n`}</code></pre>\n    <p>{`Note that you cannot add the same secret more than once. If you need to delete a secret in order to create a new one, use the following command:  `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc delete secret admin.registrykey -n fncnproject\n`}</code></pre>\n    <h3>{`Install the ICN components`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Download the `}<a parentName=\"p\" {...{\n            \"href\": \"%7B%7Bsite.github.url%7D%7D/assets/automation/icn/values.yaml\"\n          }}><inlineCode parentName=\"a\">{`values.yaml`}</inlineCode></a>{` file to your working directory.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Download the Helm charts to your working directory:`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`wget https://github.com/icp4a/cert-kubernetes/raw/master/NAVIGATOR/helm-charts/ibm-dba-navigator-3.0.0.tgz\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Install the Helm charts:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`helm install ibm-dba-navigator-3.0.0.tgz --name navigator-prod-release --namespace fncnproject -f values.yaml\n`}</code></pre>\n    <h3>{`Expose the ICN console service`}</h3>\n    <p>{`Download the `}<a parentName=\"p\" {...{\n        \"href\": \"%7B%7Bsite.github.url%7D%7D/assets/automation/icn/route.yaml\"\n      }}><inlineCode parentName=\"a\">{`route.yaml`}</inlineCode></a>{` file to your working directory and run the command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc apply -f route.yaml\n`}</code></pre>\n    <p>{`To retrieve the ICN console service URL, open the `}<inlineCode parentName=\"p\">{`services`}</inlineCode>{` section on the OCP cluster console, select the desired ICN service, and go to the detail page to find the URL.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc get route -n openshift-console\n\n`}</code></pre>\n    <p>{`which will return something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`NAME      HOST/PORT                                   PATH      SERVICES   PORT      TERMINATION          WILDCARD\nconsole   console.apps-cp4a-res.rtp.raleigh.ibm.com             console    https     reencrypt/Redirect   None\n`}</code></pre>\n    <p>{`Open the Host/Port in a browser. Select the ecmproject. On the left, select Networking, and the routes. This will give you the base URL for ICN. Append `}<inlineCode parentName=\"p\">{`/navigator`}</inlineCode>{` to that URL. That should take you to the ICN page. The username is `}<inlineCode parentName=\"p\">{`ceadmin`}</inlineCode>{` and the password is `}<inlineCode parentName=\"p\">{`Passw0rd`}</inlineCode>{`.`}</p>\n    <h3>{`Post-install tasks`}</h3>\n    <p>{`See the following step to complete the installation:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/support/knowledgecenter/en/SSYHZ8_18.0.x/com.ibm.dba.install/k8s_topics/tsk_ecmconfigbank8s.html\"\n        }}>{`Configuring IBM Business Automation Navigator in a container environment`}</a></li>\n    </ul>\n    <h3>{`Initialize your Navigator installation`}</h3>\n    <p>{`Login to Navigator. Go to `}<inlineCode parentName=\"p\">{`Administration`}</inlineCode>{` panel from the `}<inlineCode parentName=\"p\">{`Main Menu`}</inlineCode>{`. Click on `}<inlineCode parentName=\"p\">{`Connections`}</inlineCode>{` then select the `}<inlineCode parentName=\"p\">{`Repositories`}</inlineCode>{` tab.`}</p>\n    <p>{`Create a repository: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Choose `}<inlineCode parentName=\"li\">{`FileNet Content Manager repository`}</inlineCode>{` as type. `}</li>\n      <li parentName=\"ul\">{`The server URL must be your CPE service URL + `}<inlineCode parentName=\"li\">{`/wsi/FNCEWS40MTOM/`}</inlineCode>{`. This should look like: `}<inlineCode parentName=\"li\">{`https://cpe-prod-release-ibm-dba-contentservices-https-ecmproject.router.default.svc.cluster.local/wsi/FNCEWS40MTOM/`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`In the `}<inlineCode parentName=\"li\">{`Configuration Parameters`}</inlineCode>{` tab, set the `}<inlineCode parentName=\"li\">{`Entry template management`}</inlineCode>{` value to `}<inlineCode parentName=\"li\">{`Enabled`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Create a `}<inlineCode parentName=\"p\">{`Desktop`}</inlineCode>{`.`}</p>\n    <h3>{`Uninstall`}</h3>\n    <p>{`If needed, run the following steps to uninstall ICN:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm delete navigator-prod-release --purge \noc delete -f route.yaml\noc delete secret admin.registrykey -n fncnproject\n`}</code></pre>\n    <p>{`To optionally delete the PVs`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc delete pvc icn-asperastore-pvc\noc delete pvc icn-cfgstore-pvc\noc delete pvc icn-logstore-pvc\noc delete pvc icn-pluginstore-pvc\noc delete pvc icn-vw-cachestore-pvc\noc delete pvc icn-vw-logstore-pvc\n\noc delete -f pv.yaml\n`}</code></pre>\n    <p>{`Ask your database administrator to remove the databases associated with ICN.`}</p>\n    <h3>{`Troubleshooting`}</h3>\n    <p>{`Check the pods for the ecmproject. This will show the overall health.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc get pods -n fncnproject\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Check for errors in the `}<inlineCode parentName=\"li\">{`./loadimages.sh`}</inlineCode>{` step earlier.  `}</li>\n      <li parentName=\"ul\">{`The registry might have run out of room. `}</li>\n      <li parentName=\"ul\">{`Verify you’re pushing/pulling to/from the right registry in the docker console.`}</li>\n      <li parentName=\"ul\">{`Verify Secret is not preventing you from pulling images. `}</li>\n      <li parentName=\"ul\">{`Infrastructure might have evicted the registry pod.`}</li>\n    </ul>\n    <p>{`Verify both images were uploaded and are available to your project workspace.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc get imagestreams -n fncnproject\n`}</code></pre>\n    <p>{`Run oc describe pod to gain insight into what’s going on`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc describe pod &lt;pod name> -n fncnproject\n\n`}</code></pre>\n    <p>{`Run oc logs to view the pod’s log files`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc logs &lt;pod name> -n fncnproject\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}