{"version":3,"sources":["webpack:///./src/pages/_content/data/install-Openshift-On-Vmware.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mHACA,oGACA,2BAAU,mBAAGC,WAAW,KAAQ,CAC5B,KAAQ,kFADF,wCAGV,sHACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8sDAwEL,+DACA,4DACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,0DAQTJ,EAAWK,gBAAiB","file":"component---src-pages-content-data-install-openshift-on-vmware-md-d9565d24e18ab1f8409a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/Shared/VBDData/programs/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Download Github terraform openshift installation example and create terraform.tfvars file`}</h2>\n    <p>{`  1 Download the github terraform openshift installation example from here:`}</p>\n    <p>{`   `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-cloud-architecture/terraform-openshift3-vmware-example\"\n      }}>{`terraform-openshift3-vmware-example`}</a></p>\n    <p>{`  2 Create a terraform.tfvars file based on Cloud Pak For data hardware resource requirement:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`vsphere_server = \"icovcpc65.rtp.raleigh.ibm.com\"\nssh_user = \"bob\"\nssh_password = \"res1dency$\"\nvsphere_datacenter = \"IOCDCPC1\"\nvsphere_cluster = \"ICO01\"\nvsphere_resource_pool = \"\"\ndatastore_cluster = \"ICOPC1-SAN\"\ntemplate = \"rhel76tmpl-res\"\nfolder = \"res-test-cdoan\"\nhostname_prefix = \"res-cdoan\"\nrhn_poolid = \"8a85f99a6cbfea02016d017e15d51087\"\nprivate_network_label = \"VIS241\"\nprivate_staticipblock = \"9.46.68.0/24\"\nprivate_staticipblock_offset = 63\nprivate_netmask = \"24\"\nprivate_gateway = \"9.46.68.1\"\nprivate_domain = \"rtp.raleigh.ibm.com\"\nprivate_dns_servers = [ \"9.42.106.2\", \"9.42.106.3\" ]\nmaster_cname = \"cp4d-res-master.rtp.raleigh.ibm.com\"\napp_cname = \"apps-cp4d-res.rtp.raleigh.ibm.com\"\nbastion = {\n  nodes = \"1\"\n  vcpu = \"4\"\n  memory = \"8192\"\n  disk_size = \"100\"\n  docker_disk_size = \"100\"\n  thin_provisioned = \"true\"\n  keep_disk_on_remove = false\n  eagerly_scrub = false\n}\nmaster = {\n  nodes = \"1\"\n  vcpu = \"8\"\n  memory = \"32768\"\n  disk_size = \"100\"\n  docker_disk_size = \"200\"\n  thin_provisioned = \"true\"\n  keep_disk_on_remove = false\n  eagerly_scrub = false\n}\ninfra = {\n  nodes = \"1\"\n  vcpu = \"8\"\n  memory = \"32768\"\n  disk_size = \"100\"\n  docker_disk_size = \"200\"\n  thin_provisioned = \"true\"\n  keep_disk_on_remove = false\n  eagerly_scrub = false\n}\nworker = {\n  nodes = \"4\"\n  vcpu = \"16\"\n  memory = \"65536\"\n  disk_size = \"100\"\n  docker_disk_size = \"200\"\n  thin_provisioned = \"true\"\n  keep_disk_on_remove = false\n  eagerly_scrub = false\n}\nstorage = {\n  nodes = \"3\"\n  vcpu = \"4\"\n  memory = \"16384\"\n  disk_size = \"100\"\n  docker_disk_size = \"100\"\n  gluster_disk_size = \"1200\"\n  thin_provisioned = \"true\"\n  keep_disk_on_remove = false\n  eagerly_scrub = false\n}\n`}</code></pre>\n    <h2>{`Run terraform commands to deploy OCP.`}</h2>\n    <p>{`   Run following commands in order:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` terraform init\n terraform plan\n terraform apply\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}