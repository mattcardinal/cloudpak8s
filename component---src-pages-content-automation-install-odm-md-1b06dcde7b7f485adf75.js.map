{"version":3,"sources":["webpack:///./src/pages/content/automation/install-odm.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-content-automation-install-odm-md-1b06dcde7b7f485adf75.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/Shared/VBDData/programs/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\"></li>\n    </ul>\n    <h1>{`make sure there is a space after the - so that the TOC is generated`}</h1>\n    <p>{`{:toc}`}</p>\n    <p><strong parentName=\"p\">{`(19.0.3 UPDATE NEEDED)`}</strong></p>\n    <h3>{`Required services`}</h3>\n    <p>{`Before installing Operational Decision Manager (ODM), you should have the following pre-requisites in place:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Have privileged access to your DB2 database server. `}</li>\n      <li parentName=\"ul\">{`Optionally, have access to your LDAP directory server.`}</li>\n    </ul>\n    <p>{`See the `}{`[Shared services]`}{`({{ pages.github.url }}/automation/shared-services) chapter for details on DB2 or LDAP installation, if needed.`}</p>\n    <h3>{`Download the ODM PPA`}</h3>\n    <p>{`Download the following PPA from `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/software/passportadvantage\"\n      }}>{`IBM Passport Advantage`}</a>{` to your working-directory:`}</p>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`IBM Cloud Pak for Automation v19.0.1 - Operational Decision Manager for Certified Kubernetes Multiplatform Multilingual (CC223ML)`}</em></li>\n    </ul>\n    <p>{`The downloaded archive should be named `}<inlineCode parentName=\"p\">{`ICP4A19.0.1-odm.tgz`}</inlineCode>{`.`}</p>\n    <h3>{`Log in to you OCP cluster`}</h3>\n    <p>{`See the `}{`[Prerequisites]`}{`({{ pages.github.url }}/automation/pre-requisites) chapter for details on logging in to your OCP cluster.`}</p>\n    <h3>{`Create the ODM project`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Create a new OpenShift project for ODM with your desired name, e.g. `}<inlineCode parentName=\"li\">{`odmproject`}</inlineCode>{`:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc new-project odmproject\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Make sure you are working from your newly created ODM project, then grant the tiller server `}<inlineCode parentName=\"li\">{`edit`}</inlineCode>{` access to current project:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc project odmproject\noc adm policy add-role-to-user edit \"system:serviceaccount:tiller:tiller\"\n`}</code></pre>\n    <h3>{`Update the SCC`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`oc adm policy add-scc-to-user privileged -z default\n`}</code></pre>\n    <h3>{`Push the ODM images to the registry`}</h3>\n    <p>{`If you are installing ODM for the managed cloud, and you are logged in as root, do the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Login to the Docker registry:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`docker login -u $(oc whoami) -p $(oc whoami -t) docker-registry.default.svc:5000\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Download the `}<inlineCode parentName=\"li\">{`loadimages.sh`}</inlineCode>{` script to your working directory:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`wget https://raw.githubusercontent.com/icp4a/cert-kubernetes/19.0.1/scripts/loadimages.sh\nchmod +x loadimages.sh\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Load the images:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`./loadimages.sh -p ICP4A19.0.1-odm.tgz -r docker-registry.default.svc:5000/odmproject\n`}</code></pre>\n    <p>{`To complete above steps, make sure that the port forwarding is properly addressed, see the `}{`[Pre-requisites]`}{`({{ pages.github.url }}/automation/pre-requisites) chapter for details on the docker registry port forwarding. Otherwise, you might not be able to login to the docker registry, or face timeout during the image push.`}</p>\n    <p>{`If you are installing ODM for on-prem OCP, and not logged in root, do the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Login to the Docker registry:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc -n default get route\n# search for route to docker-registry\nsudo docker login -u $(oc whoami) -p $(oc whoami -t) &lt;route_to_docker_registry>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Download the `}<inlineCode parentName=\"li\">{`loadimages.sh`}</inlineCode>{` script to your working directory:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`wget https://raw.githubusercontent.com/icp4a/cert-kubernetes/19.0.1/scripts/loadimages.sh\nchmod +x loadimages.sh\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Load the images:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo ./loadimages.sh -p ICP4A19.0.1-odm.tgz -r &lt;route_to_docker_registry>/odmproject\n`}</code></pre>\n    <h3>{`Create the ODM database`}</h3>\n    <p>{`The below step is assumed that external DB2 database is used, if internal database or other types of external databases are used, please refer to the related product documentation.`}</p>\n    <p>{`Log in to the server machine running your DB2 instance, and run the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`su - db2inst1\ndb2 create database odmdb automatic storage yes  using codeset UTF-8 territory US pagesize 32768;\ndb2 connect to odmdb\ndb2 list applications\n`}</code></pre>\n    <h3>{`Create secrets`}</h3>\n    <h4>{`Create an LDAP secret`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Download the `}<a parentName=\"p\" {...{\n            \"href\": \"assets/automation/odm/ldap-configurations.xml\"\n          }}><inlineCode parentName=\"a\">{`ldap-configurations.xml`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n            \"href\": \"assets/automation/odm/webSecurity.xml\"\n          }}><inlineCode parentName=\"a\">{`webSecurity.xml`}</inlineCode></a>{` files to your working directory.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Update the `}<inlineCode parentName=\"p\">{`ldap-configurations.xml`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`webSecurity.xml`}</inlineCode>{` file to replace the ldap host with the public IP address of your LDAP server.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If needed, you might also update the access info within `}<inlineCode parentName=\"p\">{`webSecurity.xml`}</inlineCode>{` file, e.g. to add additional user or group. For the details on how to configure the access info, please refer to the related `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.ibm.com/support/knowledgecenter/en/SSYHZ8_19.0.x/com.ibm.dba.install/k8s_topics/tsk_config_user_access.html\"\n          }}>{`ODM knowledge center section`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Run the following command:`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`oc create secret generic odm-prod-release-odm-ldap --from-file=ldap-configurations.xml --from-file=webSecurity.xml --type=Opaque\n`}</code></pre>\n    <h4>{`Create a BAI Event secret`}</h4>\n    <p>{`If you plan to use BAI, download the `}<a parentName=\"p\" {...{\n        \"href\": \"assets/automation/odm/plugin-configuration.properties\"\n      }}><inlineCode parentName=\"a\">{`plugin-configuration.properties`}</inlineCode></a>{` file to your working directory and make sure that your BAI Kafka server name is same as the one in `}<inlineCode parentName=\"p\">{`plugin-configuration.properties`}</inlineCode>{`, then run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc create secret generic odm-prod-release-odm-bai-event --from-file=plugin-configuration.properties\n`}</code></pre>\n    <h3>{`Install the ODM components`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Download the `}<a parentName=\"p\" {...{\n            \"href\": \"assets/automation/odm/values.yaml\"\n          }}>{`values.yaml`}</a>{` file to your working directory and update the DB configuration parameters under `}<inlineCode parentName=\"p\">{`externalDatabase`}</inlineCode>{` to match your configuration, in particular the IP address for the `}<inlineCode parentName=\"p\">{`serverName`}</inlineCode>{` and the `}<inlineCode parentName=\"p\">{`password`}</inlineCode>{` for the DB admin account.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Download the Helm chart to your working directory:`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`wget https://github.com/icp4a/cert-kubernetes/raw/19.0.1/ODM/helm-charts/ibm-odm-prod-2.2.0.tgz\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Install the Helm chart:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`helm install ibm-odm-prod-2.2.0.tgz --name odm-prod-release --namespace odmproject -f values.yaml\n`}</code></pre>\n    <h3>{`Expose the ODM services`}</h3>\n    <p>{`Download the `}<a parentName=\"p\" {...{\n        \"href\": \"assets/automation/odm/route.yaml\"\n      }}>{`route.yaml`}</a>{` file to your working directory and run the command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc create -f route.yaml\n`}</code></pre>\n    <p>{`To retrieve the ODM services URLs, open the `}<inlineCode parentName=\"p\">{`services`}</inlineCode>{` section on the OCP cluster console, select the desired ODM service, such as `}<inlineCode parentName=\"p\">{`odm-decisioncenter`}</inlineCode>{` and go to the detail page to find the URL. The link will look like:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`https://odm-prod-release-odm-decisioncenter-odmproject.cp4a-ocp-6550a99fb8cff23207ccecc2183787a9-0001.us-south.containers.appdomain.cloud/decisioncenter\n`}</code></pre>\n    <h3>{`Uninstall`}</h3>\n    <p>{`If needed, run the following steps to uninstall ODM:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm delete odm-prod-release --purge\noc delete secret odm-prod-release-odm-ldap\noc delete secret odm-prod-release-odm-bai-event\noc delete -f route.yaml\n`}</code></pre>\n    <p>{`Please note that if this Uninstall is permanent, you might want to clean the related DB2 tables that have been created. For this, please refer to the related `}<a parentName=\"p\" {...{\n        \"href\": \"/gtc/30990240ba7bffa2777eed8ccc60ea16/shared-services.md\"\n      }}>{`Shared services`}</a>{` section for details.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}